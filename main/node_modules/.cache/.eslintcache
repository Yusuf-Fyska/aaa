[{"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\reportWebVitals.js":"2","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\App.js":"3","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\component\\SignInSide.js":"4","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\Login.js":"5","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\AdminPage.js":"6","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\LeadGenerationPage.js":"7"},{"size":535,"mtime":1691445330684,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1691403493876,"results":"10","hashOfConfig":"9"},{"size":992,"mtime":1691445342788,"results":"11","hashOfConfig":"9"},{"size":3755,"mtime":1691451753135,"results":"12","hashOfConfig":"9"},{"size":1056,"mtime":1691405382412,"results":"13","hashOfConfig":"9"},{"size":1997,"mtime":1691451676076,"results":"14","hashOfConfig":"9"},{"size":4932,"mtime":1691451662502,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lw1s8k",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\index.js",[],[],"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\App.js",[],[],"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\component\\SignInSide.js",["41","42","43"],[],"import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\n\nfunction checkCredentials(email, password) {\n\n  const validEmail = 'solarvis@gmail.com';\n  const validPassword = 'solarvis123';\n\n  if (email === validEmail && password === validPassword) {\n    return true;\n  }\n  \n  return false;\n}\n\nconst defaultTheme = createTheme();\n\nexport default function SignInSide() {\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const enteredEmail = data.get('email');\n    const enteredPassword = data.get('password');\n\n    if (checkCredentials(enteredEmail, enteredPassword)) {\n      const now = new Date();\n      document.cookie = `lastLogin=${now.toISOString()}; expires=${new Date(now.getTime() + 60 * 60 * 1000).toUTCString()}; path=/`;\n\n      navigate('/admins');\n    } else {\n      alert('Hatalı giriş');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://p2.nicelocal.biz.tr/preview/8n_bzo-Jk6FEBkqRZeP0CQ/1120x700x85/1/9/3/original_615817cb5c62b70ca3715e65_615829aff4176.jpg)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign In\n              </Button>\n              \n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\Login.js",["44","45","46","47"],[],"C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\AdminPage.js",["48","49","50","51"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Switch from '@mui/material/Switch';\r\nimport TextField from '@mui/material/TextField';\r\nimport LeadGenerationPage from './LeadGenerationPage';\r\n\r\nfunction AdminConfigurationPage() {\r\n  const navigate = useNavigate();\r\n  const [contactPageEnabled, setContactPageEnabled] = useState(true);\r\n  const [inputPageCount, setInputPageCount] = useState(2); \r\n  const [outputPageCount, setOutputPageCount] = useState(1); \r\n\r\n  const handleBack = () => {\r\n    navigate('/login'); \r\n  };\r\n\r\n  const handleGoToAppPage = () => {\r\n    navigate('/apps', {\r\n      state: {\r\n        inputPageCount,\r\n        outputPageCount,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Box p={3}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Admin Configuration Page\r\n        </Typography>\r\n        \r\n        <div className=\"centered\">\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Input Page Count:\r\n      </Typography>\r\n      <TextField\r\n        type=\"number\"\r\n        value={inputPageCount}\r\n        onChange={(e) => setInputPageCount(Number(e.target.value))}\r\n      />\r\n\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Output Page Count: (Passive)\r\n      </Typography>\r\n      <TextField\r\n        type=\"number\"\r\n        value={outputPageCount}\r\n        onChange={(e) => setOutputPageCount(Number(e.target.value))}\r\n      />\r\n    </div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleGoToAppPage}>\r\n          Go to Lead Generation Page\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleBack}>\r\n          Back to Admin Panel\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AdminConfigurationPage;\r\n","C:\\Users\\PC\\Desktop\\solarvis\\main\\src\\routes\\LeadGenerationPage.js",["52","53","54"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction LeadGenerationPage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { inputPageCount, outputPageCount } = location.state || {};\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [inputPages, setInputPages] = useState([]);\r\n  const [outputZZZ, setOutputZZZ] = useState(0);\r\n  const [outputYYY, setOutputYYY] = useState(0);\r\n  const [inputData, setInputData] = useState({});\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: '65vh',\r\n  };\r\n\r\n  const imageStyle = {\r\n    width: 'auto',\r\n    height: '100%',\r\n    border: '1px solid #ccc',\r\n    padding: '10px',\r\n  };\r\n\r\n  const contentStyle = {\r\n    flex: 1,\r\n    padding: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputPageCount && outputPageCount) {\r\n      const pages = [];\r\n\r\n      for (let i = 0; i < inputPageCount; i++) {\r\n        pages.push({\r\n          title: `Sayfa ${i + 1}`,\r\n          description: `Açıklama ${i + 1}`,\r\n          image: `https://i2.wp.com/solarvis.co/wp-content/uploads/2021/04/solarvis_new_logo.png?fit=600200&ssl=1`,\r\n          textInputVar: '',\r\n          selectInputVar: `CCC_${i + 1}`,\r\n        });\r\n      }\r\n\r\n      setInputPages(pages);\r\n    }\r\n  }, [inputPageCount, outputPageCount]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const calculateZZZ = () => {\r\n      let ZZZ = 0;\r\n\r\n      for (const page of inputPages) {\r\n        ZZZ += 2 * (Number(page.textInputVar) + 10);\r\n      }\r\n\r\n      return ZZZ;\r\n    };\r\n\r\n    const calculateYYY = (ZZZ) => {\r\n      let YYY = 0;\r\n\r\n      for (const page of inputPages) {\r\n        YYY += 3 * Number(page.selectInputVar);\r\n      }\r\n\r\n      YYY += ZZZ;\r\n      return YYY;\r\n    };\r\n\r\n    const ZZZ = calculateZZZ();\r\n    const YYY = calculateYYY(ZZZ);\r\n\r\n    setOutputZZZ(ZZZ);\r\n    setOutputYYY(YYY);\r\n  }, [inputPages]);\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage === inputPages.length) {\r\n      setIsFinished(true);\r\n      setIsEditing(false);\r\n    } else {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n      setIsEditing(false); \r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsFinished(false);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (isEditing) {\r\n      setIsEditing(false);\r\n    } else {\r\n      navigate('/admins');\r\n    }\r\n  };\r\n\r\n  const handleTextInputChange = (e) => {\r\n    const updatedInputData = { ...inputData };\r\n    updatedInputData[currentPage] = e.target.value;\r\n    setInputData(updatedInputData);\r\n  };\r\n\r\n  if (inputPages.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentPageData = inputPages[currentPage - 1];\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={imageStyle}>\r\n        <img src={currentPageData.image} alt={`Image for ${currentPageData.title}`} />\r\n      </div>\r\n      <div style={contentStyle}>\r\n        <h1>Lead Generation Page</h1>\r\n        {!isFinished && !isEditing && <h2>{currentPageData.title}</h2>}\r\n        {!isFinished && !isEditing && <p>{currentPageData.description}</p>}\r\n        {isFinished ? (\r\n          <div>\r\n <h2>Output</h2>\r\n  {Object.keys(inputData).map((page) => (\r\n    <p key={page}>Output {page}: {inputData[page]}</p>\r\n  ))}\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleEdit}>\r\n              Back to Edit\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleBack}>\r\n              Back to Admin Configuration\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <TextField\r\n              label=\"Text Input\"\r\n              value={inputData[currentPage] || ''}\r\n              onChange={handleTextInputChange}\r\n              style={{ width: '100%' }}\r\n            />\r\n            <div>\r\n              {currentPage > 1 && (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handlePrevPage}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNextPage}>\r\n                {currentPage === inputPages.length ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!isEditing && !isFinished && (\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleBack}>\r\n            Back to Admin Configuration\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadGenerationPage;\r\n",{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":24},{"ruleId":"55","severity":1,"message":"59","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":8,"column":8,"nodeType":"57","messageId":"58","endLine":8,"endColumn":12},{"ruleId":"55","severity":1,"message":"61","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":15},{"ruleId":"55","severity":1,"message":"62","line":7,"column":17,"nodeType":"57","messageId":"58","endLine":7,"endColumn":25},{"ruleId":"55","severity":1,"message":"63","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":8,"column":20,"nodeType":"57","messageId":"58","endLine":8,"endColumn":31},{"ruleId":"55","severity":1,"message":"65","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":14},{"ruleId":"55","severity":1,"message":"66","line":9,"column":8,"nodeType":"57","messageId":"58","endLine":9,"endColumn":26},{"ruleId":"55","severity":1,"message":"67","line":13,"column":10,"nodeType":"57","messageId":"58","endLine":13,"endColumn":28},{"ruleId":"55","severity":1,"message":"68","line":13,"column":30,"nodeType":"57","messageId":"58","endLine":13,"endColumn":51},{"ruleId":"55","severity":1,"message":"69","line":11,"column":10,"nodeType":"57","messageId":"58","endLine":11,"endColumn":19},{"ruleId":"55","severity":1,"message":"70","line":12,"column":10,"nodeType":"57","messageId":"58","endLine":12,"endColumn":19},{"ruleId":"71","severity":1,"message":"72","line":128,"column":9,"nodeType":"73","endLine":128,"endColumn":87},"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Link' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'Switch' is defined but never used.","'LeadGenerationPage' is defined but never used.","'contactPageEnabled' is assigned a value but never used.","'setContactPageEnabled' is assigned a value but never used.","'outputZZZ' is assigned a value but never used.","'outputYYY' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]