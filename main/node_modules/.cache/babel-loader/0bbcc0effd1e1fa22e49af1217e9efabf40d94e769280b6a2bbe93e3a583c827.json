{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\solarvis\\\\main\\\\src\\\\routes\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport LeadGenerationPage from './LeadGenerationPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminConfigurationPage() {\n  _s();\n  const navigate = useNavigate();\n  const [contactPageEnabled, setContactPageEnabled] = useState(true);\n  const [inputPageCount, setInputPageCount] = useState(2); // Set the default input page count\n  const [inputPages, setInputPages] = useState([]); // Store input page details\n  const [outputPageCount, setOutputPageCount] = useState(1); // Set the default output page count\n  const [calculationFormulas, setCalculationFormulas] = useState([]); // Store calculation formulas\n\n  const handleBack = () => {\n    navigate('/admin');\n  };\n  function generateInputPages(count) {\n    const inputPages = [];\n    for (let i = 0; i < count; i++) {\n      const inputPage = {\n        title: `Input Page ${i + 1}`,\n        description: `Description for Input Page ${i + 1}`,\n        image: `path_to_image_${i + 1}`,\n        textInputVar: `AAA_${i + 1}`,\n        selectInputVar: `CCC_${i + 1}`\n      };\n      inputPages.push(inputPage);\n    }\n    return inputPages;\n  }\n  const handleSave = () => {\n    // Admin ayarlarını kaydetme işlemleri burada gerçekleştirilebilir\n    console.log('Settings saved:', {\n      contactPageEnabled,\n      inputPageCount,\n      inputPages,\n      outputPageCount,\n      calculationFormulas\n    });\n  };\n  const handleGoToAppPage = () => {\n    const generatedInputPages = generateInputPages(inputPageCount);\n    setInputPages(generatedInputPages);\n    navigate(`/app/${inputPageCount}`, {\n      state: {\n        inputPages\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Admin Configuration Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Contact Page Settings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        checked: contactPageEnabled,\n        onChange: e => setContactPageEnabled(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Input Page Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        value: inputPageCount,\n        onChange: e => setInputPageCount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        gutterBottom: true,\n        children: \"Output Page Count:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        value: outputPageCount,\n        onChange: e => setOutputPageCount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSave,\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handleBack,\n        children: \"Back to Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleGoToAppPage,\n        children: \"Go to Lead Generation Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminConfigurationPage, \"4zpvBJOuvfrH62pwdtSPHlqkPlw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminConfigurationPage;\nexport default AdminConfigurationPage;\nvar _c;\n$RefreshReg$(_c, \"AdminConfigurationPage\");","map":{"version":3,"names":["React","useState","useNavigate","Paper","Box","Typography","Button","Switch","TextField","LeadGenerationPage","jsxDEV","_jsxDEV","AdminConfigurationPage","_s","navigate","contactPageEnabled","setContactPageEnabled","inputPageCount","setInputPageCount","inputPages","setInputPages","outputPageCount","setOutputPageCount","calculationFormulas","setCalculationFormulas","handleBack","generateInputPages","count","i","inputPage","title","description","image","textInputVar","selectInputVar","push","handleSave","console","log","handleGoToAppPage","generatedInputPages","state","elevation","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","e","target","type","value","Number","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/solarvis/main/src/routes/AdminPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Switch from '@mui/material/Switch';\r\nimport TextField from '@mui/material/TextField';\r\nimport LeadGenerationPage from './LeadGenerationPage';\r\n\r\nfunction AdminConfigurationPage() {\r\n  const navigate = useNavigate();\r\n  const [contactPageEnabled, setContactPageEnabled] = useState(true);\r\n  const [inputPageCount, setInputPageCount] = useState(2); // Set the default input page count\r\n  const [inputPages, setInputPages] = useState([]); // Store input page details\r\n  const [outputPageCount, setOutputPageCount] = useState(1); // Set the default output page count\r\n  const [calculationFormulas, setCalculationFormulas] = useState([]); // Store calculation formulas\r\n\r\n  const handleBack = () => {\r\n    navigate('/admin');\r\n  };\r\n\r\n  function generateInputPages(count) {\r\n    const inputPages = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const inputPage = {\r\n        title: `Input Page ${i + 1}`,\r\n        description: `Description for Input Page ${i + 1}`,\r\n        image: `path_to_image_${i + 1}`,\r\n        textInputVar: `AAA_${i + 1}`,\r\n        selectInputVar: `CCC_${i + 1}`,\r\n      };\r\n\r\n      inputPages.push(inputPage);\r\n    }\r\n\r\n    return inputPages;\r\n  }\r\n\r\n  const handleSave = () => {\r\n    // Admin ayarlarını kaydetme işlemleri burada gerçekleştirilebilir\r\n    console.log('Settings saved:', {\r\n      contactPageEnabled,\r\n      inputPageCount,\r\n      inputPages,\r\n      outputPageCount,\r\n      calculationFormulas,\r\n    });\r\n  };\r\n\r\n  const handleGoToAppPage = () => {\r\n    const generatedInputPages = generateInputPages(inputPageCount);\r\n    setInputPages(generatedInputPages);\r\n    navigate(`/app/${inputPageCount}`, { state: { inputPages } });\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Box p={3}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Admin Configuration Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Contact Page Settings:\r\n        </Typography>\r\n        <Switch\r\n          checked={contactPageEnabled}\r\n          onChange={(e) => setContactPageEnabled(e.target.checked)}\r\n        />\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Input Page Count:\r\n        </Typography>\r\n        <TextField\r\n          type=\"number\"\r\n          value={inputPageCount}\r\n          onChange={(e) => setInputPageCount(Number(e.target.value))}\r\n        />\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Output Page Count:\r\n        </Typography>\r\n        <TextField\r\n          type=\"number\"\r\n          value={outputPageCount}\r\n          onChange={(e) => setOutputPageCount(Number(e.target.value))}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n          Save Settings\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleBack}>\r\n          Back to Admin Panel\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleGoToAppPage}>\r\n          Go to Lead Generation Page\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AdminConfigurationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}