{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\solarvis\\\\main\\\\src\\\\routes\\\\LeadGenerationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LeadGenerationPage() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    inputPageCount,\n    outputPageCount\n  } = location.state || {};\n  const [currentPage, setCurrentPage] = useState(1);\n  const [inputPages, setInputPages] = useState([]);\n  const [outputZZZ, setOutputZZZ] = useState(0);\n  const [outputYYY, setOutputYYY] = useState(0);\n  useEffect(() => {\n    if (inputPageCount && outputPageCount) {\n      const pages = [];\n      for (let i = 0; i < inputPageCount; i++) {\n        pages.push({\n          title: `Input Page ${i + 1}`,\n          description: `Description for Input Page ${i + 1}`,\n          image: `path_to_image_${i + 1}`,\n          textInputVar: `AAA_${i + 1}`,\n          selectInputVar: `CCC_${i + 1}`\n        });\n      }\n      setInputPages(pages);\n    }\n  }, [inputPageCount, outputPageCount]);\n  useEffect(() => {\n    // Calculate ZZZ and YYY based on input values\n    const calculateZZZ = () => {\n      let ZZZ = 0;\n      for (const page of inputPages) {\n        ZZZ += 2 * (Number(page.textInputVar) + 10);\n      }\n      return ZZZ;\n    };\n    const calculateYYY = ZZZ => {\n      let YYY = 0;\n      for (const page of inputPages) {\n        YYY += 3 * Number(page.selectInputVar);\n      }\n      YYY += ZZZ;\n      return YYY;\n    };\n    const ZZZ = calculateZZZ();\n    const YYY = calculateYYY(ZZZ);\n    setOutputZZZ(ZZZ);\n    setOutputYYY(YYY);\n  }, [inputPages]);\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => Math.min(prevPage + 1, inputPages.length));\n  };\n  const handleBack = () => {\n    navigate('/app');\n  };\n  if (inputPages.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  const currentPageData = inputPages[currentPage - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lead Generation Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentPageData.image,\n        alt: `Image for ${currentPageData.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentPageData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPageData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Text Input: \", currentPageData.textInputVar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Select Input: \", currentPageData.selectInputVar]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === inputPages.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ZZZ: \", outputZZZ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"YYY: \", outputYYY]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleBack,\n      children: \"Back to Admin Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(LeadGenerationPage, \"9VTmwt6hSRtXWwVDOt/DZWrFRmg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LeadGenerationPage;\nexport default LeadGenerationPage;\nvar _c;\n$RefreshReg$(_c, \"LeadGenerationPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","useLocation","useNavigate","jsxDEV","_jsxDEV","LeadGenerationPage","_s","location","navigate","inputPageCount","outputPageCount","state","currentPage","setCurrentPage","inputPages","setInputPages","outputZZZ","setOutputZZZ","outputYYY","setOutputYYY","pages","i","push","title","description","image","textInputVar","selectInputVar","calculateZZZ","ZZZ","page","Number","calculateYYY","YYY","handlePrevPage","prevPage","Math","max","handleNextPage","min","length","handleBack","children","fileName","_jsxFileName","lineNumber","columnNumber","currentPageData","src","alt","onClick","disabled","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/solarvis/main/src/routes/LeadGenerationPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction LeadGenerationPage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { inputPageCount, outputPageCount } = location.state || {};\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [inputPages, setInputPages] = useState([]);\r\n  const [outputZZZ, setOutputZZZ] = useState(0);\r\n  const [outputYYY, setOutputYYY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (inputPageCount && outputPageCount) {\r\n      const pages = [];\r\n\r\n      for (let i = 0; i < inputPageCount; i++) {\r\n        pages.push({\r\n          title: `Input Page ${i + 1}`,\r\n          description: `Description for Input Page ${i + 1}`,\r\n          image: `path_to_image_${i + 1}`,\r\n          textInputVar: `AAA_${i + 1}`,\r\n          selectInputVar: `CCC_${i + 1}`,\r\n        });\r\n      }\r\n\r\n      setInputPages(pages);\r\n    }\r\n  }, [inputPageCount, outputPageCount]);\r\n\r\n  useEffect(() => {\r\n    // Calculate ZZZ and YYY based on input values\r\n    const calculateZZZ = () => {\r\n      let ZZZ = 0;\r\n\r\n      for (const page of inputPages) {\r\n        ZZZ += 2 * (Number(page.textInputVar) + 10);\r\n      }\r\n\r\n      return ZZZ;\r\n    };\r\n\r\n    const calculateYYY = (ZZZ) => {\r\n      let YYY = 0;\r\n\r\n      for (const page of inputPages) {\r\n        YYY += 3 * Number(page.selectInputVar);\r\n      }\r\n\r\n      YYY += ZZZ;\r\n      return YYY;\r\n    };\r\n\r\n    const ZZZ = calculateZZZ();\r\n    const YYY = calculateYYY(ZZZ);\r\n\r\n    setOutputZZZ(ZZZ);\r\n    setOutputYYY(YYY);\r\n  }, [inputPages]);\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, inputPages.length));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/app');\r\n  };\r\n\r\n  if (inputPages.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const currentPageData = inputPages[currentPage - 1];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lead Generation Page</h1>\r\n      <div>\r\n        <img src={currentPageData.image} alt={`Image for ${currentPageData.title}`} />\r\n        <h2>{currentPageData.title}</h2>\r\n        <p>{currentPageData.description}</p>\r\n        <p>Text Input: {currentPageData.textInputVar}</p>\r\n        <p>Select Input: {currentPageData.selectInputVar}</p>\r\n      </div>\r\n      <div>\r\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <button onClick={handleNextPage} disabled={currentPage === inputPages.length}>\r\n          Next\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <h2>Output</h2>\r\n        <p>ZZZ: {outputZZZ}</p>\r\n        <p>YYY: {outputYYY}</p>\r\n      </div>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleBack}>\r\n        Back to Admin Configuration\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadGenerationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}